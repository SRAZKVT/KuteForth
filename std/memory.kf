// Magic numbers : (to change to hex as soon as possible)
//
// 255                  : 0x0000_0000_0000_00FF
// 65535                : 0x0000_0000_0000_FFFF
// 4294967295           : 0x0000_0000_FFFF_FFFF
// 18446744073709551615 : 0xFFFF_FFFF_FFFF_FFFF
// 
// 18446744073709551360 : 0xFFFF_FFFF_FFFF_FF00
// 18446744073709486080 : 0xFFFF_FFFF_FFFF_0000
// 18446744069414584320 : 0xFFFF_FFFF_0000_0000
// 0                    : 0x0000_0000_0000_0000

include
	"bool.kf"
end

func pwrite64 ptr int -- void in pwrite end
func pread64  ptr     -- int  in pread  end

func NULL void -- ptr in 0 ptr end

func ptreq ptr ptr -- bool in int swap int eq end

func ptrinc ptr -- ptr in int 1 plus ptr end
func ptrdec ptr -- ptr in int 1 minus ptr end

// WARNING
// The static buffer allocator assumes the first 64 bits of the static buffer to be its counter for the amount of bytes currently in use. DO NOT WRITE THERE
// If you do, data loss is going to happen.

func alloc_temp_buffer
int  // amount of bytes to allocate
--
ptr  // pointer to begining of allocated memory
bool // success
in
	if dup mem_start pread64 plus 64000 8 minus gt over 0 lt or do // if end of memory after allocation would be beyond buffer size, return null ptr and false
		drop NULL false
	else
		mem_start pread64 mem_start int plus ptr dup rot           // get current pointer to end of memory
		while dup 0 eq not do
			1 minus
			swap ptrinc
			dup 0 pwrite8
			swap
		end drop drop true
	end
end

func free_temp_buffer
int  // amount of bytes to deallocate
--
void
in
	if dup mem_start pread64 minus 0 lt do
		NULL swap pwrite64 // trying to deallocate memory that wasn't allocated in the first place, segfault
	else
		dup mem_start swap over pread64 swap minus pwrite64 drop // write in head of memory the decreased amount of bytes allocated
	end
end
