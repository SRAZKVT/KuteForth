include 
	"memory.kf"
	"bool.kf"
	"numbers.kf"
end

func cstr_size ptr -- int in
	0 swap
	while dup pread8 0 eq not do
		swap 1 plus
		swap ptrinc
	end drop
end

func cstr_to_str ptr -- int ptr in dup cstr_size swap end

func is_digit int -- bool in dup '0' gteq swap '9' lteq and end

func is_numeral_str int ptr -- bool in
	if over 0 eq do false else true end
	rot rot
	while over 0 eq not do
		rot over pread8 is_digit and rot rot
		swap 1 minus swap
		ptrinc
	end
	drop drop
end

func str_to_int int ptr -- int bool in
	if dup pread8 '-' eq do
		ptrinc swap 1 minus swap
		true
	else false end
	rot rot
	if over over is_numeral_str do
		0
		while rot dup 0 eq not do
			1 minus
			rot rot
			10 mult
			over pread8 '0' minus
			plus
			swap ptrinc swap
		end drop swap drop
		true
		if rot do
			swap neg swap
		end
	else
		drop drop drop 0 false
	end
end

func is_whitespace int -- bool in
	dup      '\t' eq
	swap dup '\n' eq rot or
	swap dup ' '  eq rot or
	swap drop
end

func trim_whitespace_left 
int ptr // str
--
int ptr // str
int     // amount of characters trimmed
in
	0
	while over pread8 is_whitespace do
		1 plus
		rot 1 minus
		rot ptrinc
		rot
	end
end

func str_line_size
int ptr // str
--
int     // amount of characters in line
in
	0 rot rot
	while dup pread8 '\n' eq not do
		ptrinc
		rot 1 plus
		rot 1 minus
		rot
	end drop drop
end

func get_first_n
int ptr // str
int     // amount of characters
--
int ptr // remaining string
int ptr // split string
in
	rot swap save minus 1 minus rot rot swap over over ptrplus 1 ptrplus rot rot swap
end

func get_line
int ptr // str
--
int ptr // remaining string
int ptr // split line
in
	over over str_line_size get_first_n
end
